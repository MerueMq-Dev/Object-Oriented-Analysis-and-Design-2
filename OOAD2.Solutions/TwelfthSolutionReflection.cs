namespace OOAD2.Solutions;

public class TwelfthSolutionReflection
{

    // Я решил задачу, используя встроенный оператор C# as, который проверяет, можно ли привести объект к нужному типу,
    // и возвращает либо объект этого типа, либо null. Это простое и понятное решение.
    // Решение на Java похоже на моё по структуре — там тоже используются обобщённые типы и проверка совместимости типов.
    // Однако есть важное отличие: в Java при несовместимости типов возвращается специальный тип Void, предназначенный для
    // пустых значений.Это более правильно соответствует формальной модели ООП, описанной в задании. В моём решении я 
    // использовал обычный null, что является ошибкой — я должен был возвращать Void.
    // Если подвести итог то решение на Java лучше соответствует описанию задачи, а в моём решении нужно исправить 
    // возвращаемое значение с null на Void.
}
namespace OOAD2.Solutions;

public class FirstSolutionReflection
{
    // Мой код классно демонстрирует наследование, полиморфизм и композицию.
    // С наследованием всё четко: есть главный класс Animal, а от него уже расходятся Pet, Dog и Cat.
    // Полиморфизм я показал через метод Speak — каждое животное "говорит" по-своему. Композицию тоже
    // добавил: в Pet живет объект Person. Код получился чистым, с нормальными комментариями — разберется любой.
    // Но есть нюансы. Композиция у меня больше для галочки — этот Person никак не влияет на то, что делают животные.
    // И полиморфизм показан скорее в теории, без живого примера, когда объекты работают в массиве или списке.
    // Если сравнить с решением с велосипедами, то у меня получилось более "учебно" и сухо, а у
    // него — сразу видно, как все крутится и взаимодействует в реальности.
}